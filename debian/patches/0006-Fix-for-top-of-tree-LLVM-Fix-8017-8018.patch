From: Steven Johnson <srj@google.com>
Date: Wed, 3 Jan 2024 20:05:37 +0000
Subject: Fix for top-of-tree LLVM (Fix #8017) (#8018)

Fix for top-of-tree LLVM

Forwarded: not-needed
---
 src/CodeGen_LLVM.cpp    | 4 ++++
 src/CodeGen_PTX_Dev.cpp | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/src/CodeGen_LLVM.cpp b/src/CodeGen_LLVM.cpp
index 18e70df..1b800ef 100644
--- a/src/CodeGen_LLVM.cpp
+++ b/src/CodeGen_LLVM.cpp
@@ -1244,7 +1244,11 @@ void CodeGen_LLVM::optimize_module() {
     }
 
     if (tm) {
+#if LLVM_VERSION >= 180
+        tm->registerPassBuilderCallbacks(pb, /*PopulateClassToPassNames=*/false);
+#else
         tm->registerPassBuilderCallbacks(pb);
+#endif
     }
 
     mpm = pb.buildPerModuleDefaultPipeline(level, debug_pass_manager);
diff --git a/src/CodeGen_PTX_Dev.cpp b/src/CodeGen_PTX_Dev.cpp
index 2a47e59..6be2f1b 100644
--- a/src/CodeGen_PTX_Dev.cpp
+++ b/src/CodeGen_PTX_Dev.cpp
@@ -700,7 +700,11 @@ vector<char> CodeGen_PTX_Dev::compile_to_src() {
     using OptimizationLevel = llvm::OptimizationLevel;
     OptimizationLevel level = OptimizationLevel::O3;
 
+#if LLVM_VERSION >= 180
+    target_machine->registerPassBuilderCallbacks(pb, /*PopulateClassToPassNames=*/false);
+#else
     target_machine->registerPassBuilderCallbacks(pb);
+#endif
 
     mpm = pb.buildPerModuleDefaultPipeline(level, debug_pass_manager);
     mpm.run(*module, mam);
